{"title":"simulation case study","markdown":{"yaml":{"title":"simulation case study","format":"html","editor":"visual"},"headingText":"responsive case study simulation","containsRefs":false,"markdown":"\n\n\nYou can model a “hidden” learner with parameters (level, celeration, bounce, error rate, opportunities), then update those parameters when students “apply” an intervention. Each cohort (or each student) gets a different seed so the data feels unique, but their intervention choices still produce sensible, responsive changes.\n\n-   Simulates 5 weeks (Mon–Fri) of daily timings for one “case study.”\n\n-   Lets you define which intervention(s) a student applies each week.\n\n-   Updates the underlying learning dynamics in realistic ways (level shift, celeration change, bounce change, error-rate change).\n\n-   Adds natural day-to-day variability.\n\n-   Exports tidy data you can chart on an SCC.\n\n-   run this as-is, then change the `actions_by_week` and the `student_seed` to create different responsive scenarios for different students.\n\n```{r}\nsuppressPackageStartupMessages({\n  library(dplyr)\n  library(tidyr)\n  library(purrr)\n  library(stringr)\n  library(ggplot2)\n})\n```\n\nCatalog of interventions and their typical effects --- \\# Effects are multiplicative on parameters with some noise so it's not deterministic.\n\n```{r}\nINTERVENTIONS <- list(\n  frequency_building = list(\n    desc = \"Daily 1-min timings with immediate feedback + aims\",\n    effects = list(\n      correct_cel_mult = 1.15,     # speed up growth of correct\n      incorrect_cel_mult = 0.85,   # speed up decay of incorrect\n      level_shift_correct = 1.10,  # small immediate level bump\n      var_mult = 0.90              # reduce variability\n    )\n  ),\n  error_correction = list(\n    desc = \"Triggered error correction (model-lead-test) on top errors\",\n    effects = list(\n      incorrect_cel_mult = 0.80,   # steeper reduction of incorrect\n      level_shift_incorrect = 0.90,# immediate fewer errors\n      var_mult = 0.95\n    )\n  ),\n  component_breakdown = list(\n    desc = \"Slice back to component skills (easier set)\",\n    effects = list(\n      level_shift_correct = 1.20, \n      correct_cel_mult   = 1.05,\n      incorrect_cel_mult = 0.85,\n      difficulty_shift   = -0.15   # becomes easier; helps initially, may cap aims\n    )\n  ),\n  reinforcement_dense = list(\n    desc = \"Denser reinforcement + precise timing goals\",\n    effects = list(\n      level_shift_correct = 1.10,\n      var_mult = 0.90\n    )\n  ),\n  prompt_fading = list(\n    desc = \"Systematic prompt fading to reduce prompt dependency\",\n    effects = list(\n      incorrect_cel_mult = 0.85,\n      var_mult = 0.92\n    )\n  ),\n  adjust_set_size = list(\n    desc = \"Reduce item set to increase opportunities per minute\",\n    effects = list(\n      level_shift_correct = 1.15,\n      var_mult = 0.93\n    )\n  ),\n  add_timed_opportunities = list(\n    desc = \"Increase timings per day (practice opportunities)\",\n    effects = list(\n      timings_per_day_delta = +4,  # +4 more timings/day\n      correct_cel_mult = 1.05\n    )\n  )\n)\n```\n\nInitialize a case (hidden learner profile)\n\n```{r}\ninit_case <- function(case_id = \"Student A\", seed = 123,\n                      baseline_correct = 20, baseline_incorrect = 12,\n                      base_cel_up = 1.10, base_cel_down = 0.90,\n                      timing_len_s = 60, timings_per_day = 8) {\n  set.seed(seed)\n```\n\nHidden learner sensitivity (adds heterogeneity across sections)\n\n```{r}\nsensitivity <- list(\n    to_cel_up   = runif(1, 0.8, 1.2),\n    to_cel_down = runif(1, 0.8, 1.2),\n    to_levels   = runif(1, 0.8, 1.2),\n    to_var      = runif(1, 0.8, 1.2)\n  )\n  \n  state <- list(\n    case_id = case_id,\n    day_index = 0,\n    phase = \"Baseline\",\n    # expected counts per 1-min timing at day 0\n    mean_correct   = baseline_correct,\n    mean_incorrect = baseline_incorrect,\n    # daily celeration (multiplicative day-to-day change)\n    cel_up   = base_cel_up,\n    cel_down = base_cel_down,\n    # dispersion / variability (affects Poisson-Gamma mixture)\n    var_scale = 0.25,\n    # difficulty scaler (easier < 1; harder > 1)\n    difficulty = 1.0,\n    timing_len_s = timing_len_s,\n    timings_per_day = timings_per_day,\n    sensitivity = sensitivity,\n    history = tibble()\n  )\n  return(state)\n}\n```\n\nApply intervention choices to state (once per week)\n\n```{r}\napply_interventions <- function(state, actions = character(), rng = NULL) {\n  if (length(actions) == 0) return(state)\n  if (!is.null(rng)) set.seed(rng)\n```\n\nAggregate effects across all chosen interventions\n\n```{r}\neff <- list(\n    correct_cel_mult = 1,\n    incorrect_cel_mult = 1,\n    level_shift_correct = 1,\n    level_shift_incorrect = 1,\n    var_mult = 1,\n    difficulty_shift = 0,\n    timings_per_day_delta = 0\n  )\n  \n  for (a in actions) {\n    if (!a %in% names(INTERVENTIONS)) next\n    e <- INTERVENTIONS[[a]]$effects\n```\n\nadd small stochasticity so it’s not gamed\n\n```{r}\njitter <- function(x, pct = 0.05) x * rnorm(1, mean = 1, sd = pct)\n    \n    eff$correct_cel_mult   <- eff$correct_cel_mult   * (e$correct_cel_mult   %||% 1) %>% jitter()\n    eff$incorrect_cel_mult <- eff$incorrect_cel_mult * (e$incorrect_cel_mult %||% 1) %>% jitter()\n    eff$level_shift_correct   <- eff$level_shift_correct   * (e$level_shift_correct   %||% 1) %>% jitter()\n    eff$level_shift_incorrect <- eff$level_shift_incorrect * (e$level_shift_incorrect %||% 1) %>% jitter()\n    eff$var_mult           <- eff$var_mult           * (e$var_mult           %||% 1) %>% jitter()\n    eff$difficulty_shift   <- eff$difficulty_shift   + (e$difficulty_shift   %||% 0)\n    eff$timings_per_day_delta <- eff$timings_per_day_delta + (e$timings_per_day_delta %||% 0)\n  }\n```\n\nRespect hidden learner sensitivity\n\n```{r}\nsens <- state$sensitivity\n  state$cel_up   <- state$cel_up   * (eff$correct_cel_mult   ^ sens$to_cel_up)\n  state$cel_down <- state$cel_down * (eff$incorrect_cel_mult ^ sens$to_cel_down)\n  state$mean_correct   <- state$mean_correct   * (eff$level_shift_correct   ^ sens$to_levels)\n  state$mean_incorrect <- state$mean_incorrect * (eff$level_shift_incorrect ^ sens$to_levels)\n  state$var_scale <- max(0.05, state$var_scale * (eff$var_mult ^ sens$to_var))\n  state$difficulty <- max(0.6, state$difficulty + eff$difficulty_shift)\n  state$timings_per_day <- max(4, round(state$timings_per_day + eff$timings_per_day_delta))\n  \n  # Update phase label for plotting if you like\n  if (length(actions) > 0) {\n    state$phase <- paste0(\"Intervention: \", paste(actions, collapse = \"+\"))\n  }\n  return(state)\n}\n```\n\ndraw overdispersed counts (Poisson-Gamma mixture)\n\n```{r}\nr_overdispersed_counts <- function(mean, kappa = 1/state$var_scale) {\n  # kappa is shape; larger = less overdispersion\n  # mean is the Poisson mean; Gamma-poisson mixture => NegBin\n  # Implement via rnbinom parameterization\n  # mean = mu, size = kappa, prob = size / (size + mu)\n  size <- kappa\n  mu   <- pmax(0.01, mean)\n  prob <- size / (size + mu)\n  rnbinom(length(mu), size = size, prob = prob)\n}\n\n```\n\nSimulate a week (5 days by default)\n\n```{r}\nsimulate_week <- function(state, week = 1, n_days = 5, class_section = NULL) {\n  out <- vector(\"list\", n_days)\n  for (d in seq_len(n_days)) {\n    state$day_index <- state$day_index + 1\n    # deterministic daily drift via celeration; difficulty scales both means\n    mean_cor <- (state$mean_correct   * (state$cel_up  ^ (state$day_index-1))) / state$difficulty\n    mean_err <- (state$mean_incorrect * (state$cel_down^ (state$day_index-1))) * state$difficulty\n    \n    # small day-level noise and auto-correlation taste\n    day_jit <- rlnorm(1, meanlog = 0, sdlog = 0.05)\n    mean_cor <- mean_cor * day_jit\n    mean_err <- mean_err * (2 - day_jit)\n    \n    # draw multiple timings within the day\n    kappa <- 1/state$var_scale\n    correct   <- rnbinom(state$timings_per_day, size = kappa, mu = pmax(0.1, mean_cor))\n    incorrect <- rnbinom(state$timings_per_day, size = kappa, mu = pmax(0.1, mean_err))\n    \n    out[[d]] <- tibble(\n      case_id = state$case_id,\n      week = week,\n      day = d,\n      timing = seq_len(state$timings_per_day),\n      secs = state$timing_len_s,\n      correct = correct,\n      incorrect = incorrect,\n      total = pmax(1, correct + incorrect),\n      phase = state$phase,\n      section = class_section %||% NA_character_\n    )\n  }\n  week_df <- bind_rows(out)\n  # keep a running history inside state if desired\n  state$history <- bind_rows(state$history, week_df)\n  list(state = state, data = week_df)\n}\n\n`%||%` <- function(x, y) if (is.null(x)) y else x\n\n```\n\nExample: run a 5-week responsive scenario\n\nInstructor setup: same \"case\" across sections, but different seeds produce variants\n\n```{r}\ncase_A <- init_case(case_id = \"Case Study: Jay\", seed = 2025,\n                    baseline_correct = 18, baseline_incorrect = 14,\n                    base_cel_up = 1.08, base_cel_down = 0.92,\n                    timings_per_day = 8)\n\n# Week 1 (Baseline data you hand out)\nw1 <- simulate_week(case_A, week = 1)\n\n# Suppose a student team chooses interventions after reviewing Week 1:\nstudent_choice_w2 <- c(\"frequency_building\", \"error_correction\")\ncase_A <- apply_interventions(w1$state, student_choice_w2, rng = 42)\nw2 <- simulate_week(case_A, week = 2)\n\n# Week 3: maybe they add components & more timings\nstudent_choice_w3 <- c(\"component_breakdown\", \"add_timed_opportunities\")\ncase_A <- apply_interventions(w2$state, student_choice_w3, rng = 43)\nw3 <- simulate_week(case_A, week = 3)\n\n# Week 4: reinforce + fade prompts\nstudent_choice_w4 <- c(\"reinforcement_dense\", \"prompt_fading\")\ncase_A <- apply_interventions(w3$state, student_choice_w4, rng = 44)\nw4 <- simulate_week(case_A, week = 4)\n\n# Week 5: no changes (or pick something else)\nstudent_choice_w5 <- character(0)\ncase_A <- apply_interventions(w4$state, student_choice_w5, rng = 45)\nw5 <- simulate_week(case_A, week = 5)\n\nall_weeks <- bind_rows(w1$data, w2$data, w3$data, w4$data, w5$data)\n\n# Quick look\nprint(all_weeks %>% slice(1:10))\n```\n\n## How you’d run this with a class\n\n1.  **Hand out Week 1 (Baseline)** Run `w1 <- simulate_week(case_A, week = 1)` and export `w1$data` to CSV for students to chart.\n\n2.  **Students choose interventions** Collect their choices (they can pick 0–3 from the keys in `INTERVENTIONS`).\n\n3.  **Apply choices → generate next week** Run `case_A <- apply_interventions(w1$state, c(\"frequency_building\",\"error_correction\"))`\\\n\n    then `w2 <- simulate_week(case_A, week = 2)`. Export; repeat weekly.\n\n4.  **Different sections get different variants** Use the same `case_id` but different `seed` in `init_case()`. The hidden sensitivity and noise ensure each section’s learner “responds” a bit differently—even to the same interventions.\n\n5.  **Prevent gaming** Effects include random jitter and hidden sensitivities, so identical choices don’t always yield identical slopes/levels. Students still see principled patterns (e.g., frequency building tends to increase correct celeration and lower variability; error correction tends to accelerate error decay).\n\n## Customize the knobs (quick guide)\n\n-   **Make baseline rougher/smoother**: adjust `var_scale` in `init_case()`.\n\n-   **Make intervention effects stronger/weaker**: tweak multipliers in `INTERVENTIONS`.\n\n-   **Make practice effects bigger**: increase `base_cel_up` (and/or decrease `base_cel_down`).\n\n-   **Change opportunities per day**: set `timings_per_day` initially or via `add_timed_opportunities`.\n\n-   **Make task easier/harder**: `difficulty_shift` in an intervention or `state$difficulty` directly.\n","srcMarkdownNoYaml":"\n\n## responsive case study simulation\n\nYou can model a “hidden” learner with parameters (level, celeration, bounce, error rate, opportunities), then update those parameters when students “apply” an intervention. Each cohort (or each student) gets a different seed so the data feels unique, but their intervention choices still produce sensible, responsive changes.\n\n-   Simulates 5 weeks (Mon–Fri) of daily timings for one “case study.”\n\n-   Lets you define which intervention(s) a student applies each week.\n\n-   Updates the underlying learning dynamics in realistic ways (level shift, celeration change, bounce change, error-rate change).\n\n-   Adds natural day-to-day variability.\n\n-   Exports tidy data you can chart on an SCC.\n\n-   run this as-is, then change the `actions_by_week` and the `student_seed` to create different responsive scenarios for different students.\n\n```{r}\nsuppressPackageStartupMessages({\n  library(dplyr)\n  library(tidyr)\n  library(purrr)\n  library(stringr)\n  library(ggplot2)\n})\n```\n\nCatalog of interventions and their typical effects --- \\# Effects are multiplicative on parameters with some noise so it's not deterministic.\n\n```{r}\nINTERVENTIONS <- list(\n  frequency_building = list(\n    desc = \"Daily 1-min timings with immediate feedback + aims\",\n    effects = list(\n      correct_cel_mult = 1.15,     # speed up growth of correct\n      incorrect_cel_mult = 0.85,   # speed up decay of incorrect\n      level_shift_correct = 1.10,  # small immediate level bump\n      var_mult = 0.90              # reduce variability\n    )\n  ),\n  error_correction = list(\n    desc = \"Triggered error correction (model-lead-test) on top errors\",\n    effects = list(\n      incorrect_cel_mult = 0.80,   # steeper reduction of incorrect\n      level_shift_incorrect = 0.90,# immediate fewer errors\n      var_mult = 0.95\n    )\n  ),\n  component_breakdown = list(\n    desc = \"Slice back to component skills (easier set)\",\n    effects = list(\n      level_shift_correct = 1.20, \n      correct_cel_mult   = 1.05,\n      incorrect_cel_mult = 0.85,\n      difficulty_shift   = -0.15   # becomes easier; helps initially, may cap aims\n    )\n  ),\n  reinforcement_dense = list(\n    desc = \"Denser reinforcement + precise timing goals\",\n    effects = list(\n      level_shift_correct = 1.10,\n      var_mult = 0.90\n    )\n  ),\n  prompt_fading = list(\n    desc = \"Systematic prompt fading to reduce prompt dependency\",\n    effects = list(\n      incorrect_cel_mult = 0.85,\n      var_mult = 0.92\n    )\n  ),\n  adjust_set_size = list(\n    desc = \"Reduce item set to increase opportunities per minute\",\n    effects = list(\n      level_shift_correct = 1.15,\n      var_mult = 0.93\n    )\n  ),\n  add_timed_opportunities = list(\n    desc = \"Increase timings per day (practice opportunities)\",\n    effects = list(\n      timings_per_day_delta = +4,  # +4 more timings/day\n      correct_cel_mult = 1.05\n    )\n  )\n)\n```\n\nInitialize a case (hidden learner profile)\n\n```{r}\ninit_case <- function(case_id = \"Student A\", seed = 123,\n                      baseline_correct = 20, baseline_incorrect = 12,\n                      base_cel_up = 1.10, base_cel_down = 0.90,\n                      timing_len_s = 60, timings_per_day = 8) {\n  set.seed(seed)\n```\n\nHidden learner sensitivity (adds heterogeneity across sections)\n\n```{r}\nsensitivity <- list(\n    to_cel_up   = runif(1, 0.8, 1.2),\n    to_cel_down = runif(1, 0.8, 1.2),\n    to_levels   = runif(1, 0.8, 1.2),\n    to_var      = runif(1, 0.8, 1.2)\n  )\n  \n  state <- list(\n    case_id = case_id,\n    day_index = 0,\n    phase = \"Baseline\",\n    # expected counts per 1-min timing at day 0\n    mean_correct   = baseline_correct,\n    mean_incorrect = baseline_incorrect,\n    # daily celeration (multiplicative day-to-day change)\n    cel_up   = base_cel_up,\n    cel_down = base_cel_down,\n    # dispersion / variability (affects Poisson-Gamma mixture)\n    var_scale = 0.25,\n    # difficulty scaler (easier < 1; harder > 1)\n    difficulty = 1.0,\n    timing_len_s = timing_len_s,\n    timings_per_day = timings_per_day,\n    sensitivity = sensitivity,\n    history = tibble()\n  )\n  return(state)\n}\n```\n\nApply intervention choices to state (once per week)\n\n```{r}\napply_interventions <- function(state, actions = character(), rng = NULL) {\n  if (length(actions) == 0) return(state)\n  if (!is.null(rng)) set.seed(rng)\n```\n\nAggregate effects across all chosen interventions\n\n```{r}\neff <- list(\n    correct_cel_mult = 1,\n    incorrect_cel_mult = 1,\n    level_shift_correct = 1,\n    level_shift_incorrect = 1,\n    var_mult = 1,\n    difficulty_shift = 0,\n    timings_per_day_delta = 0\n  )\n  \n  for (a in actions) {\n    if (!a %in% names(INTERVENTIONS)) next\n    e <- INTERVENTIONS[[a]]$effects\n```\n\nadd small stochasticity so it’s not gamed\n\n```{r}\njitter <- function(x, pct = 0.05) x * rnorm(1, mean = 1, sd = pct)\n    \n    eff$correct_cel_mult   <- eff$correct_cel_mult   * (e$correct_cel_mult   %||% 1) %>% jitter()\n    eff$incorrect_cel_mult <- eff$incorrect_cel_mult * (e$incorrect_cel_mult %||% 1) %>% jitter()\n    eff$level_shift_correct   <- eff$level_shift_correct   * (e$level_shift_correct   %||% 1) %>% jitter()\n    eff$level_shift_incorrect <- eff$level_shift_incorrect * (e$level_shift_incorrect %||% 1) %>% jitter()\n    eff$var_mult           <- eff$var_mult           * (e$var_mult           %||% 1) %>% jitter()\n    eff$difficulty_shift   <- eff$difficulty_shift   + (e$difficulty_shift   %||% 0)\n    eff$timings_per_day_delta <- eff$timings_per_day_delta + (e$timings_per_day_delta %||% 0)\n  }\n```\n\nRespect hidden learner sensitivity\n\n```{r}\nsens <- state$sensitivity\n  state$cel_up   <- state$cel_up   * (eff$correct_cel_mult   ^ sens$to_cel_up)\n  state$cel_down <- state$cel_down * (eff$incorrect_cel_mult ^ sens$to_cel_down)\n  state$mean_correct   <- state$mean_correct   * (eff$level_shift_correct   ^ sens$to_levels)\n  state$mean_incorrect <- state$mean_incorrect * (eff$level_shift_incorrect ^ sens$to_levels)\n  state$var_scale <- max(0.05, state$var_scale * (eff$var_mult ^ sens$to_var))\n  state$difficulty <- max(0.6, state$difficulty + eff$difficulty_shift)\n  state$timings_per_day <- max(4, round(state$timings_per_day + eff$timings_per_day_delta))\n  \n  # Update phase label for plotting if you like\n  if (length(actions) > 0) {\n    state$phase <- paste0(\"Intervention: \", paste(actions, collapse = \"+\"))\n  }\n  return(state)\n}\n```\n\ndraw overdispersed counts (Poisson-Gamma mixture)\n\n```{r}\nr_overdispersed_counts <- function(mean, kappa = 1/state$var_scale) {\n  # kappa is shape; larger = less overdispersion\n  # mean is the Poisson mean; Gamma-poisson mixture => NegBin\n  # Implement via rnbinom parameterization\n  # mean = mu, size = kappa, prob = size / (size + mu)\n  size <- kappa\n  mu   <- pmax(0.01, mean)\n  prob <- size / (size + mu)\n  rnbinom(length(mu), size = size, prob = prob)\n}\n\n```\n\nSimulate a week (5 days by default)\n\n```{r}\nsimulate_week <- function(state, week = 1, n_days = 5, class_section = NULL) {\n  out <- vector(\"list\", n_days)\n  for (d in seq_len(n_days)) {\n    state$day_index <- state$day_index + 1\n    # deterministic daily drift via celeration; difficulty scales both means\n    mean_cor <- (state$mean_correct   * (state$cel_up  ^ (state$day_index-1))) / state$difficulty\n    mean_err <- (state$mean_incorrect * (state$cel_down^ (state$day_index-1))) * state$difficulty\n    \n    # small day-level noise and auto-correlation taste\n    day_jit <- rlnorm(1, meanlog = 0, sdlog = 0.05)\n    mean_cor <- mean_cor * day_jit\n    mean_err <- mean_err * (2 - day_jit)\n    \n    # draw multiple timings within the day\n    kappa <- 1/state$var_scale\n    correct   <- rnbinom(state$timings_per_day, size = kappa, mu = pmax(0.1, mean_cor))\n    incorrect <- rnbinom(state$timings_per_day, size = kappa, mu = pmax(0.1, mean_err))\n    \n    out[[d]] <- tibble(\n      case_id = state$case_id,\n      week = week,\n      day = d,\n      timing = seq_len(state$timings_per_day),\n      secs = state$timing_len_s,\n      correct = correct,\n      incorrect = incorrect,\n      total = pmax(1, correct + incorrect),\n      phase = state$phase,\n      section = class_section %||% NA_character_\n    )\n  }\n  week_df <- bind_rows(out)\n  # keep a running history inside state if desired\n  state$history <- bind_rows(state$history, week_df)\n  list(state = state, data = week_df)\n}\n\n`%||%` <- function(x, y) if (is.null(x)) y else x\n\n```\n\nExample: run a 5-week responsive scenario\n\nInstructor setup: same \"case\" across sections, but different seeds produce variants\n\n```{r}\ncase_A <- init_case(case_id = \"Case Study: Jay\", seed = 2025,\n                    baseline_correct = 18, baseline_incorrect = 14,\n                    base_cel_up = 1.08, base_cel_down = 0.92,\n                    timings_per_day = 8)\n\n# Week 1 (Baseline data you hand out)\nw1 <- simulate_week(case_A, week = 1)\n\n# Suppose a student team chooses interventions after reviewing Week 1:\nstudent_choice_w2 <- c(\"frequency_building\", \"error_correction\")\ncase_A <- apply_interventions(w1$state, student_choice_w2, rng = 42)\nw2 <- simulate_week(case_A, week = 2)\n\n# Week 3: maybe they add components & more timings\nstudent_choice_w3 <- c(\"component_breakdown\", \"add_timed_opportunities\")\ncase_A <- apply_interventions(w2$state, student_choice_w3, rng = 43)\nw3 <- simulate_week(case_A, week = 3)\n\n# Week 4: reinforce + fade prompts\nstudent_choice_w4 <- c(\"reinforcement_dense\", \"prompt_fading\")\ncase_A <- apply_interventions(w3$state, student_choice_w4, rng = 44)\nw4 <- simulate_week(case_A, week = 4)\n\n# Week 5: no changes (or pick something else)\nstudent_choice_w5 <- character(0)\ncase_A <- apply_interventions(w4$state, student_choice_w5, rng = 45)\nw5 <- simulate_week(case_A, week = 5)\n\nall_weeks <- bind_rows(w1$data, w2$data, w3$data, w4$data, w5$data)\n\n# Quick look\nprint(all_weeks %>% slice(1:10))\n```\n\n## How you’d run this with a class\n\n1.  **Hand out Week 1 (Baseline)** Run `w1 <- simulate_week(case_A, week = 1)` and export `w1$data` to CSV for students to chart.\n\n2.  **Students choose interventions** Collect their choices (they can pick 0–3 from the keys in `INTERVENTIONS`).\n\n3.  **Apply choices → generate next week** Run `case_A <- apply_interventions(w1$state, c(\"frequency_building\",\"error_correction\"))`\\\n\n    then `w2 <- simulate_week(case_A, week = 2)`. Export; repeat weekly.\n\n4.  **Different sections get different variants** Use the same `case_id` but different `seed` in `init_case()`. The hidden sensitivity and noise ensure each section’s learner “responds” a bit differently—even to the same interventions.\n\n5.  **Prevent gaming** Effects include random jitter and hidden sensitivities, so identical choices don’t always yield identical slopes/levels. Students still see principled patterns (e.g., frequency building tends to increase correct celeration and lower variability; error correction tends to accelerate error decay).\n\n## Customize the knobs (quick guide)\n\n-   **Make baseline rougher/smoother**: adjust `var_scale` in `init_case()`.\n\n-   **Make intervention effects stronger/weaker**: tweak multipliers in `INTERVENTIONS`.\n\n-   **Make practice effects bigger**: increase `base_cel_up` (and/or decrease `base_cel_down`).\n\n-   **Change opportunities per day**: set `timings_per_day` initially or via `add_timed_opportunities`.\n\n-   **Make task easier/harder**: `difficulty_shift` in an intervention or `state$difficulty` directly.\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","output-file":"pilot2_casestudy_simulations.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.8.24","title":"simulation case study","editor":"visual"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["revealjs"]}