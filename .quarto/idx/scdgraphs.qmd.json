{"title":"SCD Graphs","markdown":{"yaml":{"title":"SCD Graphs","format":{"html":{"toc":false,"theme":"default","df-print":"paged","include-in-header":"<style>\n  body { font-family: \"Times New Roman\", Times, serif; }\n</style>\n"}},"execute":{"echo":false,"warning":false,"message":false}},"headingText":"------------------------------------------------------","containsRefs":false,"markdown":"\n\n```{r}\n# Setup\n# ------------------------------------------------------\nknitr::opts_chunk$set(fig.width = 10, fig.height = 6, dpi = 300, dev = \"png\")\n\nlibrary(readr)\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(janitor)\nlibrary(stringr)\nlibrary(scales)\nlibrary(grid)\n\n# Fonts (Times New Roman via showtext if available)\nuse_showtext <- requireNamespace(\"showtext\", quietly = TRUE)\nif (use_showtext) {\n  library(showtext)\n  showtext_auto(enable = TRUE)\n  showtext_opts(dpi = 300)\n}\n\nget_times_family <- function() {\n  if (requireNamespace(\"systemfonts\", quietly = TRUE)) {\n    fi <- try(systemfonts::match_font(\"Times New Roman\"), silent = TRUE)\n    if (!inherits(fi, \"try-error\") && !is.null(fi$family) && nchar(fi$family)) return(\"Times New Roman\")\n    fi2 <- try(systemfonts::match_font(\"Times\"), silent = TRUE)\n    if (!inherits(fi2, \"try-error\") && !is.null(fi2$family) && nchar(fi2$family)) return(\"Times\")\n  }\n  \"serif\"\n}\nBASE_FAMILY <- get_times_family()\ncat(\"Using font family for plots:\", BASE_FAMILY, \"\\n\")\n\n# ------------------------------------------------------\n# Helpers\n# ------------------------------------------------------\nread_clean <- function(path) {\n  read_csv(path, show_col_types = FALSE) |>\n    clean_names() |>\n    transmute(\n      participant = as.character(participant),\n      week        = as.numeric(week),\n      condition   = as.character(condition),\n      outcome     = as.numeric(outcome)\n    ) |>\n    arrange(participant, week)\n}\n\n# All phase changes (Baseline->Intervention bold; Intervention->Follow-up dashed)\nphase_lines_all <- function(dat) {\n  dat |>\n    mutate(cond_low = str_to_lower(condition)) |>\n    group_by(participant) |>\n    arrange(week, .by_group = TRUE) |>\n    mutate(prev_cond = lag(cond_low),\n           prev_week = lag(week)) |>\n    filter(!is.na(prev_cond) & cond_low != prev_cond) |>\n    mutate(\n      xmid = prev_week + 0.5,\n      type = case_when(\n        str_detect(cond_low, \"follow\") | str_detect(cond_low, \"maintain\") ~ \"followup\",\n        TRUE ~ \"intervention\"\n      )\n    ) |>\n    select(participant, xmid, type) |>\n    ungroup()\n}\n\n# Break only at condition changes (not at missing weeks)\nadd_segments_runs <- function(dat) {\n  dat |>\n    group_by(participant) |>\n    arrange(week, .by_group = TRUE) |>\n    mutate(\n      cond_lag = lag(condition, default = first(condition)),\n      segment  = 1L + cumsum(condition != cond_lag)\n    ) |>\n    ungroup()\n}\n\n# Plotter with fixed axes + TNR + padding\nplot_mb_fixed <- function(dat, title, ylab,\n                          x_limits, y_limits, y_breaks,\n                          base_family = BASE_FAMILY) {\n  dat <- dat |> filter(!is.na(outcome))\n  vlines <- phase_lines_all(dat)\n  dat    <- add_segments_runs(dat)\n\n  y0 <- y_limits[1]; y1 <- y_limits[2]\n\n  ggplot(dat, aes(week, outcome)) +\n    geom_segment(\n      data = vlines |> filter(type == \"intervention\"),\n      aes(x = xmid, xend = xmid, y = y0, yend = y1),\n      inherit.aes = FALSE, color = \"black\", linewidth = 1.2\n    ) +\n    geom_segment(\n      data = vlines |> filter(type == \"followup\"),\n      aes(x = xmid, xend = xmid, y = y0, yend = y1),\n      inherit.aes = FALSE, color = \"black\", linewidth = 0.9, linetype = 2\n    ) +\n    geom_line(aes(group = interaction(participant, segment)),\n              color = \"#007030\", linewidth = 0.9, alpha = 0.9) +\n    geom_point(shape = 21, size = 2.4, stroke = 0.7,\n               color = \"#104735\", fill = \"#FEE11A\") +\n    facet_wrap(~ participant, ncol = 1, scales = \"fixed\") +\n    scale_x_continuous(\n      limits = x_limits,\n      breaks = seq(x_limits[1], x_limits[2], by = 1),\n      expand = expansion(mult = c(0.01, 0.01))\n    ) +\n    scale_y_continuous(\n      limits = y_limits,\n      breaks = y_breaks,\n      expand = expansion(mult = c(0.02, 0.04))\n    ) +\n    labs(title = title, x = \"Week\", y = ylab) +\n    theme_minimal(base_size = 13, base_family = base_family) +\n    theme(\n      plot.title   = element_text(face = \"bold\", size = 18, hjust = 0.5),\n      strip.text   = element_text(face = \"bold\", size = 12),\n      axis.text.y  = element_text(size = 12, margin = margin(r = 8)),\n      axis.text.x  = element_text(size = 12),\n      axis.title.y = element_text(margin = margin(r = 12), size = 13),\n      panel.grid.minor = element_blank(),\n      panel.spacing.y  = unit(12, \"pt\"),\n      plot.margin = margin(t = 10, r = 20, b = 12, l = 38)\n    ) +\n    coord_cartesian(xlim = x_limits, ylim = y_limits, clip = \"off\")\n}\n```\n\n## Time to 100% Accuracy\n\n```{r}\ndat_time <- read_clean(\"data_time.csv\")\np_time <- plot_mb_fixed(\n  dat_time,\n  title    = \"Time to 100% Accuracy\",\n  ylab     = \"Time to 100% accuracy (minutes)\",\n  x_limits = c(1, 16),\n  y_limits = c(0, 15),\n  y_breaks = seq(0, 15, by = 3)   # less crowded: 0,3,6,9,12,15\n)\np_time\n\n```\n\n## Quality of Written Interpretation\n\n```{r}\ndat_written <- read_clean(\"data_written.csv\")\np_written <- plot_mb_fixed(\n  dat_written,\n  title    = \"Quality of Written Interpretation\",\n  ylab     = \"Written interpretation rubric score\",\n  x_limits = c(1, 16),\n  y_limits = c(0, 14),\n  y_breaks = seq(0, 14, by = 2)   # less crowded: 0,2,4,...,14\n)\np_written\n```\n\n## Number of Attempts\n\n```{r}\ndat_attempts <- read_clean(\"data_attempts.csv\")\np_attempts <- plot_mb_fixed(\n  dat_attempts,\n  title    = \"Number of Attempts\",\n  ylab     = \"Attempts to reach 100%\",\n  x_limits = c(1, 16),\n  y_limits = c(0, 5),\n  y_breaks = 0:5\n)\np_attempts\n```\n","srcMarkdownNoYaml":"\n\n```{r}\n# ------------------------------------------------------\n# Setup\n# ------------------------------------------------------\nknitr::opts_chunk$set(fig.width = 10, fig.height = 6, dpi = 300, dev = \"png\")\n\nlibrary(readr)\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(janitor)\nlibrary(stringr)\nlibrary(scales)\nlibrary(grid)\n\n# Fonts (Times New Roman via showtext if available)\nuse_showtext <- requireNamespace(\"showtext\", quietly = TRUE)\nif (use_showtext) {\n  library(showtext)\n  showtext_auto(enable = TRUE)\n  showtext_opts(dpi = 300)\n}\n\nget_times_family <- function() {\n  if (requireNamespace(\"systemfonts\", quietly = TRUE)) {\n    fi <- try(systemfonts::match_font(\"Times New Roman\"), silent = TRUE)\n    if (!inherits(fi, \"try-error\") && !is.null(fi$family) && nchar(fi$family)) return(\"Times New Roman\")\n    fi2 <- try(systemfonts::match_font(\"Times\"), silent = TRUE)\n    if (!inherits(fi2, \"try-error\") && !is.null(fi2$family) && nchar(fi2$family)) return(\"Times\")\n  }\n  \"serif\"\n}\nBASE_FAMILY <- get_times_family()\ncat(\"Using font family for plots:\", BASE_FAMILY, \"\\n\")\n\n# ------------------------------------------------------\n# Helpers\n# ------------------------------------------------------\nread_clean <- function(path) {\n  read_csv(path, show_col_types = FALSE) |>\n    clean_names() |>\n    transmute(\n      participant = as.character(participant),\n      week        = as.numeric(week),\n      condition   = as.character(condition),\n      outcome     = as.numeric(outcome)\n    ) |>\n    arrange(participant, week)\n}\n\n# All phase changes (Baseline->Intervention bold; Intervention->Follow-up dashed)\nphase_lines_all <- function(dat) {\n  dat |>\n    mutate(cond_low = str_to_lower(condition)) |>\n    group_by(participant) |>\n    arrange(week, .by_group = TRUE) |>\n    mutate(prev_cond = lag(cond_low),\n           prev_week = lag(week)) |>\n    filter(!is.na(prev_cond) & cond_low != prev_cond) |>\n    mutate(\n      xmid = prev_week + 0.5,\n      type = case_when(\n        str_detect(cond_low, \"follow\") | str_detect(cond_low, \"maintain\") ~ \"followup\",\n        TRUE ~ \"intervention\"\n      )\n    ) |>\n    select(participant, xmid, type) |>\n    ungroup()\n}\n\n# Break only at condition changes (not at missing weeks)\nadd_segments_runs <- function(dat) {\n  dat |>\n    group_by(participant) |>\n    arrange(week, .by_group = TRUE) |>\n    mutate(\n      cond_lag = lag(condition, default = first(condition)),\n      segment  = 1L + cumsum(condition != cond_lag)\n    ) |>\n    ungroup()\n}\n\n# Plotter with fixed axes + TNR + padding\nplot_mb_fixed <- function(dat, title, ylab,\n                          x_limits, y_limits, y_breaks,\n                          base_family = BASE_FAMILY) {\n  dat <- dat |> filter(!is.na(outcome))\n  vlines <- phase_lines_all(dat)\n  dat    <- add_segments_runs(dat)\n\n  y0 <- y_limits[1]; y1 <- y_limits[2]\n\n  ggplot(dat, aes(week, outcome)) +\n    geom_segment(\n      data = vlines |> filter(type == \"intervention\"),\n      aes(x = xmid, xend = xmid, y = y0, yend = y1),\n      inherit.aes = FALSE, color = \"black\", linewidth = 1.2\n    ) +\n    geom_segment(\n      data = vlines |> filter(type == \"followup\"),\n      aes(x = xmid, xend = xmid, y = y0, yend = y1),\n      inherit.aes = FALSE, color = \"black\", linewidth = 0.9, linetype = 2\n    ) +\n    geom_line(aes(group = interaction(participant, segment)),\n              color = \"#007030\", linewidth = 0.9, alpha = 0.9) +\n    geom_point(shape = 21, size = 2.4, stroke = 0.7,\n               color = \"#104735\", fill = \"#FEE11A\") +\n    facet_wrap(~ participant, ncol = 1, scales = \"fixed\") +\n    scale_x_continuous(\n      limits = x_limits,\n      breaks = seq(x_limits[1], x_limits[2], by = 1),\n      expand = expansion(mult = c(0.01, 0.01))\n    ) +\n    scale_y_continuous(\n      limits = y_limits,\n      breaks = y_breaks,\n      expand = expansion(mult = c(0.02, 0.04))\n    ) +\n    labs(title = title, x = \"Week\", y = ylab) +\n    theme_minimal(base_size = 13, base_family = base_family) +\n    theme(\n      plot.title   = element_text(face = \"bold\", size = 18, hjust = 0.5),\n      strip.text   = element_text(face = \"bold\", size = 12),\n      axis.text.y  = element_text(size = 12, margin = margin(r = 8)),\n      axis.text.x  = element_text(size = 12),\n      axis.title.y = element_text(margin = margin(r = 12), size = 13),\n      panel.grid.minor = element_blank(),\n      panel.spacing.y  = unit(12, \"pt\"),\n      plot.margin = margin(t = 10, r = 20, b = 12, l = 38)\n    ) +\n    coord_cartesian(xlim = x_limits, ylim = y_limits, clip = \"off\")\n}\n```\n\n## Time to 100% Accuracy\n\n```{r}\ndat_time <- read_clean(\"data_time.csv\")\np_time <- plot_mb_fixed(\n  dat_time,\n  title    = \"Time to 100% Accuracy\",\n  ylab     = \"Time to 100% accuracy (minutes)\",\n  x_limits = c(1, 16),\n  y_limits = c(0, 15),\n  y_breaks = seq(0, 15, by = 3)   # less crowded: 0,3,6,9,12,15\n)\np_time\n\n```\n\n## Quality of Written Interpretation\n\n```{r}\ndat_written <- read_clean(\"data_written.csv\")\np_written <- plot_mb_fixed(\n  dat_written,\n  title    = \"Quality of Written Interpretation\",\n  ylab     = \"Written interpretation rubric score\",\n  x_limits = c(1, 16),\n  y_limits = c(0, 14),\n  y_breaks = seq(0, 14, by = 2)   # less crowded: 0,2,4,...,14\n)\np_written\n```\n\n## Number of Attempts\n\n```{r}\ndat_attempts <- read_clean(\"data_attempts.csv\")\np_attempts <- plot_mb_fixed(\n  dat_attempts,\n  title    = \"Number of Attempts\",\n  ylab     = \"Attempts to reach 100%\",\n  x_limits = c(1, 16),\n  y_limits = c(0, 5),\n  y_breaks = 0:5\n)\np_attempts\n```\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"paged","error":false,"eval":true,"cache":null,"freeze":false,"echo":false,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"message":false,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","toc":false,"include-in-header":["<style>\n  body { font-family: \"Times New Roman\", Times, serif; }\n</style>\n"],"output-file":"scdgraphs.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.8.24","title":"SCD Graphs","theme":"default"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["revealjs"]}